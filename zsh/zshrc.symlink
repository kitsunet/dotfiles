# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

export OP_ACCOUNT=RSH7CY7PCBGZ7L4X57Q43VLXIM

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U path_files
path_files=($DOTFILES/zsh/path/*.zsh)
# load the path files
for file in ${path_files}
do
  source $file
done

# load settings
typeset -U settings_files
settings_files=($DOTFILES/zsh/settings/*.zsh)
for file in ${settings_files}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
typeset -U completion_files
completion_files=($DOTFILES/zsh/completion/*.zsh)
for file in ${completion_files}
do
  source $file
done

unset config_files

#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

gpg-connect-agent /bye

# determine versions of PHP installed with HomeBrew
installedPhpVersions=($(brew ls --versions | ggrep -E 'php(@.*)?\s' | ggrep -oP '(?<=\s)\d\.\d' | uniq | sort))

# create alias for every version of PHP installed with HomeBrew
for phpVersion in ${installedPhpVersions[*]}; do
    value="{"

    for otherPhpVersion in ${installedPhpVersions[*]}; do
        if [ "${otherPhpVersion}" = "${phpVersion}" ]; then
            continue
        fi

        # unlink other PHP version
        value="${value} brew services stop php@${otherPhpVersion};"
        value="${value} brew unlink php@${otherPhpVersion};"
    done

    # link desired PHP version
    value="${value} brew link php@${phpVersion} --force --overwrite;"
    value="${value} brew services restart php@${phpVersion}; } &> /dev/null"
    value="${value} && php -v"

    alias "php_${phpVersion}"="${value}"
done
